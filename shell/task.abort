#!/usr/bin/bash
[[ $1 = --help  || $1 = -h  || -z $1 ]] && printf "
Usage: `basename $0` TaskId

Aborts a currently-executing task. While the task is aborting, it it in the
ABORTING state. When is has been confirmed that the task's processes have
terminated, the task is set to the ABORTED state.

Note that it can sometimes take an undetermined time for a process to be
killed. The scheduer will time out after a while and consider the task as
terminated.

To get the task into a useful state again, the task needs to be reset using
the command 'task.reset TaskId'.

" && exit 0

# kill tailing process
trap kill -9 %1 > /dev/null 2>&1 && exit INT TERM HUP EXIT
# Start tailing the log file from NOW
tail -0cf $APP_HOME/log/events &

S=$(sqlplus -s / <<!
set feedback off
set serveroutput on size 100000
var i number
exec  :i:=scheduler.scheduler_con.task_abort(${1:-null});
quit :i
!
) &

wait %2 # Wait for second process to finish
sleep 1 # Give time for tail to poll log file and output
kill -9 %1 > /dev/null 2>&1 # kill tailing process

