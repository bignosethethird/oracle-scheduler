#!/usr/bin/bash
# Forces the Scheduler task to run now
[[ $1 = --help  || $1 = -h  || -z $1 ]] && printf "
Usage: `basename $0` TaskId

Overrides the Scheduler FSM and sets the specified task ready to run on the
next Scheduler FSM scan. Note that the Scheduler FSM must be runnng for this
to work. If not, start the Scheduler up with the command 'scheduler.init'.

" && exit 0



# kill tailing process
trap kill -9 %1 > /dev/null 2>&1 && exit INT TERM HUP EXIT
# Start tailing the log file from NOW
tail -0cf $APP_HOME/log/events &

S=$(sqlplus -s / <<!
set feedback off
set serveroutput on size 100000
set serveroutput on format wrapped
var i number
exec  :i:=scheduler.scheduler_con.task_run(${1:-null});
quit :i
!
) &

wait %2 # Wait for second process to finish
sleep 1 # Give time for tail to poll log file and output
kill -9 %1 > /dev/null 2>&1 # kill tailing process
